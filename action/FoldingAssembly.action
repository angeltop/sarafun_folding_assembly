geometry_msgs/Twist desired_velocities # Uses linear.x and angular.z respectively for desired sliding and rotational velocities
float64 final_orientation # desired final orientation in radians w.r.t surface object for the controller
float64 contact_force

# Debug options
int32 estimate_type
int32 force_control_type

# Definitions
int32 NO_ESTIMATE=1  # Uses a hardcoded distance for the contact point (set in input/config_controller.yaml)
int32 DIRECT_COMPUTATION=2  # Computed the contact point algebraically by dividing torque and force
int32 KALMAN_FILTER=3  # Uses a kalman filter based estimate of the contact point

int32 NO_FORCE_CONTROL=1  # Only executes the kinematic part of the controller
int32 CONTROL_ALONG_NORMAL=2  # Applies a velocity term that takes into account force feedback along the normal
int32 CONTROL_ALONG_TANGENT=3  #  "    "  along the tangent
int32 CONTROL_ALONG_ROD=4  # Uses the contact point estimate to apply a force feedback velocity component along the rod piece
int32 DEBUG_ROD_FORCE_CONTROL=5  # Applies a force feedback velocity component along a hardcoded rod piece direction
---
float64 elapsed_time
---
geometry_msgs/Twist commanded_velocities # This is the output to the robot eef
geometry_msgs/Vector3 contact_point_estimate
float64 angle_estimate
float64 error_estimate
float64 elapsed_time
