#!/usr/bin/env python
PACKAGE="folding_assembly_controller"

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
ects = gen.add_group("ects")
pose_control = gen.add_group("pose_control")
velocity_control = gen.add_group("velocity_control")

ects.add("use_values_ects", bool_t, 0, "Indicates if the ects parameters should be used", False)
ects.add("alpha", double_t, 0, "Sets the alpha parameter in the ects controller", 0.5, 0, 1)

pose_control.add("use_values_pose", bool_t, 0, "Indicates if the pose_control parameters should be used", False)
pose_control.add("translational_offset", double_t, 0, "Sets the desired position offset for the pose control loop", 0.05, 0.02, 0.1)
pose_control.add("angular_offset", double_t, 0, "Sets the desired angle offset for the pose control loop", pi, pi/4, 3*pi/4)

velocity_control.add("use_values_velocity", bool_t, 0, "Indicates if the velocity control parameters should be used", False)
velocity_control.add("translational_velocity", double_t, 0, "Sets the desired translational velocity for the ects controller", 0.0, -0.05, 0.05)
velocity_control.add("angular_velocity", double_t, 0, "Sets the desired angular velocity for the ects controller", 0.0, -0.1, 0.1)

gen.add("use_values", bool_t, 0, "Indicates if the dynamic reconfigure values are valid", False)
gen.add("pose_goal", bool_t, 0, "Sets the control mode between velocity and pose mode", False)
gen.add("desired_contact_force", double_t, 0, "Sets the desired contact force between assembly parts", 0.0, 0.0, 5.0)

exit(gen.generate(PACKAGE, "folding_assembly_controller", "Folding"))
