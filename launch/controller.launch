<?xml version="1.0"?>
<launch>
  <node name="joint_mux" pkg="folding_assembly_controller" type="joint_command_mux.py" output="screen">
    <rosparam command="load" file="$(find folding_assembly_controller)/input/config_mux.yaml"/>
  </node>

  <node name="folding_controller" pkg="folding_assembly_controller" type="folding_action_node" output="screen">
    <rosparam command="load" file="$(find folding_assembly_controller)/input/config_action_node.yaml"/>
    <remap from="joint_states" to="yumi/joint_states"/>
  </node>
  <!-- <arg name="simmode"  default="false" />
  <arg name="rvizconfig" default="$(find folding_assembly_controller)/rviz_abb.rviz" />
  <arg name="test_estimator" default="false" />
  <arg name="test_folding" default="true" />

  <arg name="model" default="$(find abb_irb14000_support)/urdf/irb14000.xacro" />
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <arg name="estimator_parameters" default="$(find folding_assembly_controller)/input/config_estimator.yaml"/>
  <arg name="controller_parameters" default="$(find folding_assembly_controller)/input/config_controller.yaml"/>
  <rosparam command="load" file="$(arg estimator_parameters)"/>
  <rosparam command="load" file="$(arg controller_parameters)"/>

  <group if="$(arg test_estimator)">
    <node name="estimator_node" pkg="folding_assembly_controller" type="estimator_node" output="screen"/>
  </group>

  <group unless="$(arg test_estimator)">
    <group if="$(arg test_folding)">
      <node name="folding_assembly_node" pkg="folding_assembly_controller" type="folding_assembly_node" output="screen"/>
    </group>
  </group>

  <group if="$(arg simmode)">
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  </group> -->
</launch>
